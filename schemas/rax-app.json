{
  "description": "app.json 用于对应用进行全局配置，设置路由、窗口表现、渲染方式等。",
  "type": "object",
  "properties": {
    "routes": {
      "description": "routes 用于指定应用的页面，每一项代表对应页面的路径及文件信息。",
      "type": "array",
      "items": {
        "$ref": "#/definitions/RaxRouteItemJSON"
      }
    },
    "window": {
      "$ref": "#/definitions/WindowJSON",
      "description": "可以设置应用的窗口表现，同时也支持针对每个页面设置窗口表现"
    },
    "tabBar": {
      "$ref": "#/definitions/TabBarJSON",
      "description": "如果你的应用是一个多 tab 应用（底部栏可以切换页面），那么可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。"
    }
  },
  "definitions": {
    "WindowJSON": {
      "description": "`window` 用于设置小程序的状态栏、导航条、标题、窗口背景色等。",
      "type": "object",
      "properties": {
        "defaultTitle": {
          "description": "页面默认标题。",
          "type": "string"
        },
        "pullRefresh": {
          "description": "是否允许下拉刷新，",
          "default": "true\n**说明：**\n- 下拉刷新生效的前提是 allowsBounceVertical 值为 YES。\n- window 全局配置后全局生效，但是如果单个页面配置了该参数，以页面的配置为准。",
          "type": "boolean"
        },
        "allowsBounceVertical": {
          "$ref": "#/definitions/YesOrNo",
          "description": "是否允许向下拉拽。",
          "default": "YES"
        },
        "transparentTitle": {
          "description": "导航栏透明设置。\n支持 always 一直透明 / auto 滑动自适应 / none 不透明。",
          "default": "none",
          "enum": [
            "always",
            "auto",
            "none"
          ],
          "type": "string"
        },
        "titlePenetrate": {
          "$ref": "#/definitions/YesOrNo",
          "description": "是否允许导航栏点击穿透。",
          "default": "NO"
        },
        "showTitleLoading": {
          "$ref": "#/definitions/YesOrNo",
          "description": "是否进入时显示导航栏的 loading。",
          "default": "NO"
        },
        "titleImage": {
          "description": "导航栏图片地址。",
          "type": "string"
        },
        "titleBarColor": {
          "description": "导航栏背景色。例：白色 \"#FFFFFF\"。",
          "type": "string"
        },
        "backgroundColor": {
          "description": "页面的背景色。例：白色 \"#FFFFFF\"。",
          "type": "string"
        },
        "backgroundImageColor": {
          "description": "下拉露出显示背景图的底色。例：白色 \"#FFFFFF\"。",
          "type": "string"
        },
        "backgroundImageUrl": {
          "description": "下拉露出显示背景图的链接。",
          "type": "string"
        },
        "gestureBack": {
          "$ref": "#/definitions/YesOrNo",
          "description": "仅支持 iOS，是否支持手势返回。",
          "default": "YES"
        },
        "enableScrollBar": {
          "$ref": "#/definitions/YesOrNo",
          "description": "仅支持 Android，是否显示 WebView 滚动条。",
          "default": "YES"
        },
        "onReachBottomDistance": {
          "description": "页面上拉触底时触发时距离页面底部的距离，单位为 px，详情请参见 页面事件处理函数。 1.19.0 ，目前iOS在page.json下设置无效，只能全局设置。",
          "type": "number"
        },
        "responsive": {
          "description": "rpx 单位是否宽度自适应 ，默认true，当设置为 false 时，2 rpx 将恒等于 1 px，不再根据屏幕宽度进行自适应，注意，此时 750 rpx 将不再等于100% 宽度。\n1.23.0",
          "type": "boolean"
        }
      }
    },
    "YesOrNo": {
      "enum": [
        "NO",
        "YES"
      ],
      "type": "string"
    },
    "TabBarJSON": {
      "description": "如果开发的小程序是一个多 tab 应用（客户端窗口的底部栏可以切换页面），那么可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。",
      "type": "object",
      "properties": {
        "textColor": {
          "description": "文字颜色",
          "type": "string"
        },
        "selectedColor": {
          "description": "选中文字颜色",
          "type": "string"
        },
        "backgroundColor": {
          "description": "背景色",
          "type": "string"
        },
        "items": {
          "description": "每个 tab 配置",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabBarItemJSON"
          }
        }
      }
    },
    "TabBarItemJSON": {
      "type": "object",
      "properties": {
        "pagePath": {
          "description": "设置页面路径",
          "type": "string"
        },
        "name": {
          "description": "名称",
          "type": "string"
        },
        "icon": {
          "description": "平常图标路径（非选中状态）",
          "type": "string"
        },
        "activeIcon": {
          "description": "高亮图标路径（选中状态）",
          "type": "string"
        }
      }
    },
    "Record<string,string>": {
      "description": "Construct a type with a set of properties K of type T",
      "type": "object"
    },
    "SitemapRuleJSON": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/SitemapRuleAction",
          "description": "命中该规则的页面是否能被索引"
        },
        "matching": {
          "type": "string"
        },
        "page": {
          "description": "页面路径\n`*`表示所有页面，不能作为通配符使用",
          "type": "string"
        },
        "params": {
          "description": "当 page 字段指定的页面在被本规则匹配时可能使用的页面参数名称的列表（不含参数值）",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "description": "优先级，值越大则规则越早被匹配，否则默认从上到下匹配",
          "type": "number"
        }
      }
    },
    "SitemapRuleAction": {
      "description": "命中该规则的页面是否能被索引",
      "enum": [
        "allow",
        "disallow"
      ],
      "type": "string"
    },
    "RaxRouteItemJSON": {
      "description": "routes 用于指定应用的页面，每一项代表对应页面的路径及文件信息。",
      "type": "object",
      "properties": {
        "path": {
          "description": "指定页面对应的匹配路径",
          "type": "string"
        },
        "source": {
          "description": "指定页面组件地址（必须写成 pages/[PAGE_NAME]/index 格式，嵌套式路由暂不支持）;",
          "type": "string"
        },
        "window": {
          "$ref": "#/definitions/WindowJSON",
          "description": "指定该页面的窗体表现，可以覆盖全局的窗口设置"
        },
        "targets": {
          "description": "指定页面需要构建的端，默认为 build.json 所配置的 targets 的值 *",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
